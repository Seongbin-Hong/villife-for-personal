import { useState } from "react";
import { Pressable, View } from "react-native";
import { Svg, Rect, Defs, Pattern, Use, Image, Path, ClipPath, G } from "react-native-svg";
import {
    PermissionIconProps,
    PermissionIconReturnType,
    PressableIconProps,
    PressablePermissionIconProps,
} from "./types";

function PhoneIcon(props: PermissionIconProps): PermissionIconReturnType {
    const { diameter } = props;

    return (
        <Svg width="30" height="30" viewBox="0 0 30 30" fill="none">
            <G clip-path="url(#clip0_409_883)">
                <Path
                    d="M28.7498 20.8159L25.8248 18.5659C25.103 17.8788 24.1442 17.4962 23.1477 17.4976C22.1512 17.499 21.1935 17.8843 20.4736 18.5734L18.6373 20.0334C16.6926 19.2284 14.926 18.047 13.4392 16.5572C11.9524 15.0674 10.7746 13.2985 9.97357 11.3521L11.4211 9.53212C12.1107 8.81234 12.4964 7.85447 12.4981 6.85763C12.4997 5.86078 12.1171 4.90166 11.4298 4.17962L9.18232 1.24962C9.14931 1.20561 9.1134 1.16385 9.07482 1.12462C8.36097 0.407352 7.3935 -0.000132337 6.38158 -0.00972281C5.36967 -0.0193133 4.39464 0.369761 3.66732 1.07337L2.22982 2.32337C-7.41893 12.5859 17.4798 37.5046 27.7298 27.6984L28.8673 26.3871C29.5917 25.6607 29.9985 24.6767 29.9985 23.6509C29.9985 22.625 29.5917 21.641 28.8673 20.9146C28.83 20.8796 28.7908 20.8466 28.7498 20.8159ZM27.0448 24.6909L25.9061 26.0034C18.4848 33.0221 -3.12517 12.6421 3.93358 4.15587L5.37108 2.90587C5.62 2.65832 5.95419 2.51537 6.30513 2.5063C6.65608 2.49724 6.9972 2.62275 7.25858 2.85712L9.49107 5.76087C9.5238 5.80511 9.55973 5.84689 9.59857 5.88587C9.85391 6.14339 9.99717 6.49135 9.99717 6.854C9.99717 7.21664 9.85391 7.5646 9.59857 7.82212C9.5634 7.85404 9.53041 7.88829 9.49982 7.92462L7.55482 10.3746C7.41634 10.5481 7.32656 10.7554 7.29471 10.975C7.26285 11.1947 7.29007 11.4189 7.37357 11.6246C8.31501 14.1435 9.78691 16.4305 11.6895 18.3308C13.5922 20.231 15.881 21.7001 18.4011 22.6384C18.604 22.7157 18.8236 22.7389 19.0381 22.7056C19.2527 22.6723 19.4549 22.5836 19.6248 22.4484L22.0748 20.4996C22.1116 20.47 22.1467 20.4383 22.1798 20.4046C22.3189 20.2703 22.4842 20.1661 22.6653 20.0984C22.8464 20.0307 23.0395 20.001 23.2326 20.0111C23.4256 20.0211 23.6146 20.0708 23.7876 20.157C23.9607 20.2432 24.1142 20.3641 24.2386 20.5121L27.1461 22.7459C27.3844 23.0206 27.5066 23.3773 27.4868 23.7405C27.467 24.1037 27.3067 24.4449 27.0398 24.6921L27.0448 24.6909ZM-8.99881e-05 3.20822e-05C-0.235843 0.22773 0.327656 0.0028801 -8.99881e-05 3.20822e-05C-0.227788 -0.235721 -0.00293802 0.327778 -8.99881e-05 3.20822e-05C0.00275803 -0.327714 -0.23185 0.231792 -8.99881e-05 3.20822e-05C0.23167 -0.231728 -0.327836 0.0028801 -8.99881e-05 3.20822e-05C0.235663 -0.227666 -0.327836 -0.00281595 -8.99881e-05 3.20822e-05C0.327656 0.0028801 -0.23185 -0.231728 -8.99881e-05 3.20822e-05Z"
                    fill="#374957"
                />
            </G>
            <Defs>
                <ClipPath id="clip0_409_883">
                    <Rect width="30" height="30" fill="white" />
                </ClipPath>
            </Defs>
        </Svg>
    );
}

function LocationIcon(props: PermissionIconProps): PermissionIconReturnType {
    const { diameter } = props;

    return (
        <Svg width="30" height="30" viewBox="0 0 30 30" fill="none">
            <G clip-path="url(#clip0_409_929)">
                <Path
                    d="M14.9986 15C15.9875 15 16.9542 14.7068 17.7765 14.1573C18.5987 13.6079 19.2396 12.827 19.618 11.9134C19.9964 10.9998 20.0955 9.99445 19.9025 9.02455C19.7096 8.05464 19.2334 7.16373 18.5341 6.46447C17.8349 5.7652 16.944 5.289 15.9741 5.09607C15.0042 4.90315 13.9988 5.00216 13.0852 5.3806C12.1716 5.75904 11.3907 6.3999 10.8413 7.22215C10.2919 8.04439 9.99861 9.01109 9.99861 10C9.99861 11.3261 10.5254 12.5979 11.4631 13.5355C12.4008 14.4732 13.6725 15 14.9986 15ZM14.9986 7.5C15.4931 7.5 15.9764 7.64662 16.3875 7.92133C16.7987 8.19603 17.1191 8.58648 17.3083 9.04329C17.4975 9.50011 17.547 10.0028 17.4506 10.4877C17.3541 10.9727 17.116 11.4181 16.7664 11.7678C16.4167 12.1174 15.9713 12.3555 15.4863 12.452C15.0014 12.5484 14.4987 12.4989 14.0419 12.3097C13.5851 12.1205 13.1946 11.8 12.9199 11.3889C12.6452 10.9778 12.4986 10.4945 12.4986 10C12.4986 9.33696 12.762 8.70107 13.2308 8.23223C13.6997 7.76339 14.3356 7.5 14.9986 7.5ZM25.8236 11.4462L24.9249 11.1475C25.0866 9.7474 24.9505 8.32893 24.5256 6.98511C24.1007 5.64128 23.3965 4.40245 22.4592 3.34986C21.522 2.29727 20.3728 1.4547 19.087 0.877392C17.8013 0.300084 16.408 0.00108435 14.9986 0C13.5708 0.000551212 12.1597 0.307118 10.8604 0.899044C9.56105 1.49097 8.40369 2.35451 7.46626 3.43147C6.52883 4.50843 5.83312 5.77381 5.42599 7.14234C5.01887 8.51087 4.90979 9.95076 5.10611 11.365C3.9099 11.588 2.80376 12.1524 1.9211 12.99C1.31007 13.5709 0.824317 14.2707 0.493703 15.0463C0.163089 15.8219 -0.00539656 16.6569 -0.00139521 17.5V22.5938C0.00123178 23.9454 0.440845 25.26 1.25184 26.3413C2.06284 27.4227 3.20175 28.2128 4.49861 28.5938L8.08611 29.7187C8.68868 29.9063 9.31627 30.0011 9.94736 30C10.5198 29.9993 11.0896 29.9211 11.6411 29.7675L18.8661 27.63C19.5098 27.4543 20.1887 27.4543 20.8324 27.63L23.8161 28.63C24.5515 28.809 25.3179 28.8187 26.0576 28.6584C26.7972 28.4981 27.4909 28.172 28.0862 27.7046C28.6815 27.2373 29.1629 26.6409 29.4942 25.9604C29.8255 25.2799 29.9979 24.5331 29.9986 23.7762V17.34C29.9958 16.0468 29.593 14.786 28.8456 13.7307C28.0981 12.6753 27.0426 11.8769 25.8236 11.445V11.4462ZM9.69611 4.7025C10.3914 4.00436 11.2178 3.4504 12.1277 3.07241C13.0377 2.69443 14.0133 2.49985 14.9986 2.49985C15.9839 2.49985 16.9596 2.69443 17.8695 3.07241C18.7794 3.4504 19.6058 4.00436 20.3011 4.7025C21.7038 6.11393 22.4923 8.02227 22.4948 10.0122C22.4974 12.0021 21.7139 13.9124 20.3149 15.3275L15.8736 19.6463C15.6418 19.8735 15.3301 20.0008 15.0055 20.0008C14.6808 20.0008 14.3692 19.8735 14.1374 19.6463L9.69611 15.3463C8.29044 13.9317 7.50149 12.0185 7.50149 10.0244C7.50149 8.0302 8.29044 6.11701 9.69611 4.7025V4.7025ZM27.4986 23.7762C27.4994 24.1548 27.4137 24.5286 27.2483 24.8691C27.0828 25.2097 26.8418 25.5079 26.5436 25.7413C26.2619 25.9678 25.9337 26.1294 25.5824 26.2148C25.2311 26.3001 24.8654 26.307 24.5111 26.235L21.5799 25.25C20.4711 24.9315 19.296 24.9245 18.1836 25.23L10.9536 27.365C10.2589 27.5566 9.5238 27.544 8.83611 27.3288L5.21861 26.2037C4.43567 25.9773 3.7473 25.5031 3.25685 24.8521C2.7664 24.2012 2.50034 23.4088 2.49861 22.5938V17.5C2.4958 16.9947 2.59637 16.4942 2.79413 16.0293C2.9919 15.5643 3.28268 15.1447 3.64861 14.7962C4.22143 14.2503 4.95113 13.8979 5.73486 13.7888C6.23874 15.0377 6.98908 16.1724 7.94111 17.125L12.3999 21.4412C13.0967 22.1236 14.0333 22.5058 15.0086 22.5058C15.984 22.5058 16.9205 22.1236 17.6174 21.4412L22.0711 17.1125C23.0683 16.1113 23.8408 14.9092 24.3374 13.5863L25.0086 13.8087C25.7366 14.0696 26.3663 14.5487 26.812 15.1807C27.2576 15.8126 27.4974 16.5667 27.4986 17.34V23.7762Z"
                    fill="#374957"
                />
            </G>
            <Defs>
                <ClipPath id="clip0_409_929">
                    <Rect width="30" height="30" fill="white" />
                </ClipPath>
            </Defs>
        </Svg>
    );
}

function CameraIcon(props: PermissionIconProps): PermissionIconReturnType {
    const { diameter } = props;

    return (
        <Svg width="30" height="30" viewBox="0 0 30 30" fill="none">
            <G clip-path="url(#clip0_409_926)">
                <Path
                    d="M23.75 5H23.115L20.385 1.46C20.0332 1.00726 19.5829 0.640521 19.0683 0.387568C18.5538 0.134614 17.9884 0.0020788 17.415 0L12.585 0C12.0116 0.0020788 11.4462 0.134614 10.9317 0.387568C10.4171 0.640521 9.96684 1.00726 9.615 1.46L6.885 5H6.25C4.59301 5.00198 3.00445 5.6611 1.83277 6.83278C0.661102 8.00445 0.00198482 9.59301 0 11.25L0 23.75C0.00198482 25.407 0.661102 26.9956 1.83277 28.1672C3.00445 29.3389 4.59301 29.998 6.25 30H23.75C25.407 29.998 26.9956 29.3389 28.1672 28.1672C29.3389 26.9956 29.998 25.407 30 23.75V11.25C29.998 9.59301 29.3389 8.00445 28.1672 6.83278C26.9956 5.6611 25.407 5.00198 23.75 5ZM11.595 2.9875C11.7121 2.83632 11.8621 2.71383 12.0337 2.62935C12.2052 2.54488 12.3938 2.50064 12.585 2.5H17.415C17.6062 2.50082 17.7947 2.54514 17.9662 2.62961C18.1377 2.71407 18.2878 2.83646 18.405 2.9875L19.9575 5H10.0425L11.595 2.9875ZM27.5 23.75C27.5 24.7446 27.1049 25.6984 26.4017 26.4017C25.6984 27.1049 24.7446 27.5 23.75 27.5H6.25C5.25544 27.5 4.30161 27.1049 3.59835 26.4017C2.89509 25.6984 2.5 24.7446 2.5 23.75V11.25C2.5 10.2554 2.89509 9.30161 3.59835 8.59835C4.30161 7.89509 5.25544 7.5 6.25 7.5H23.75C24.7446 7.5 25.6984 7.89509 26.4017 8.59835C27.1049 9.30161 27.5 10.2554 27.5 11.25V23.75Z"
                    fill="#374957"
                />
                <Path
                    d="M15 9.99988C13.5166 9.99988 12.0666 10.4397 10.8332 11.2639C9.59986 12.088 8.63856 13.2593 8.07091 14.6298C7.50325 16.0002 7.35472 17.5082 7.64411 18.9631C7.9335 20.4179 8.64781 21.7543 9.6967 22.8032C10.7456 23.8521 12.082 24.5664 13.5368 24.8558C14.9917 25.1452 16.4997 24.9966 17.8701 24.429C19.2406 23.8613 20.4119 22.9 21.236 21.6667C22.0601 20.4333 22.5 18.9832 22.5 17.4999C22.498 15.5114 21.7072 13.6049 20.3011 12.1988C18.895 10.7927 16.9885 10.0019 15 9.99988ZM15 22.4999C14.0111 22.4999 13.0444 22.2066 12.2222 21.6572C11.3999 21.1078 10.759 20.3269 10.3806 19.4133C10.0022 18.4997 9.90315 17.4943 10.0961 16.5244C10.289 15.5545 10.7652 14.6636 11.4645 13.9643C12.1637 13.2651 13.0546 12.7889 14.0246 12.596C14.9945 12.403 15.9998 12.502 16.9134 12.8805C17.8271 13.2589 18.6079 13.8998 19.1574 14.722C19.7068 15.5443 20 16.511 20 17.4999C20 18.826 19.4732 20.0977 18.5355 21.0354C17.5979 21.9731 16.3261 22.4999 15 22.4999Z"
                    fill="#374957"
                />
            </G>
            <Defs>
                <ClipPath id="clip0_409_926">
                    <Rect width="30" height="30" fill="white" />
                </ClipPath>
            </Defs>
        </Svg>
    );
}

function AddressBookIcon(props: PermissionIconProps): PermissionIconReturnType {
    const { diameter } = props;

    return (
        <Svg width="30" height="30" viewBox="0 0 30 30" fill="none">
            <G clip-path="url(#clip0_409_914)">
                <Path
                    d="M22.5 0H10C8.78529 0.00159797 7.59737 0.357132 6.58151 1.02312C5.56565 1.68912 4.76588 2.6367 4.28 3.75H2.5C2.16848 3.75 1.85054 3.8817 1.61612 4.11612C1.3817 4.35054 1.25 4.66848 1.25 5C1.25 5.33152 1.3817 5.64946 1.61612 5.88388C1.85054 6.1183 2.16848 6.25 2.5 6.25H3.75V8.75H2.5C2.16848 8.75 1.85054 8.8817 1.61612 9.11612C1.3817 9.35054 1.25 9.66848 1.25 10C1.25 10.3315 1.3817 10.6495 1.61612 10.8839C1.85054 11.1183 2.16848 11.25 2.5 11.25H3.75V13.75H2.5C2.16848 13.75 1.85054 13.8817 1.61612 14.1161C1.3817 14.3505 1.25 14.6685 1.25 15C1.25 15.3315 1.3817 15.6495 1.61612 15.8839C1.85054 16.1183 2.16848 16.25 2.5 16.25H3.75V18.75H2.5C2.16848 18.75 1.85054 18.8817 1.61612 19.1161C1.3817 19.3505 1.25 19.6685 1.25 20C1.25 20.3315 1.3817 20.6495 1.61612 20.8839C1.85054 21.1183 2.16848 21.25 2.5 21.25H3.75V23.75H2.5C2.16848 23.75 1.85054 23.8817 1.61612 24.1161C1.3817 24.3505 1.25 24.6685 1.25 25C1.25 25.3315 1.3817 25.6495 1.61612 25.8839C1.85054 26.1183 2.16848 26.25 2.5 26.25H4.28C4.76588 27.3633 5.56565 28.3109 6.58151 28.9769C7.59737 29.6429 8.78529 29.9984 10 30H22.5C24.157 29.998 25.7456 29.3389 26.9172 28.1672C28.0889 26.9956 28.748 25.407 28.75 23.75V6.25C28.748 4.59301 28.0889 3.00445 26.9172 1.83277C25.7456 0.661102 24.157 0.00198482 22.5 0V0ZM26.25 23.75C26.25 24.7446 25.8549 25.6984 25.1517 26.4017C24.4484 27.1049 23.4946 27.5 22.5 27.5H10C9.00544 27.5 8.05161 27.1049 7.34835 26.4017C6.64509 25.6984 6.25 24.7446 6.25 23.75V6.25C6.25 5.25544 6.64509 4.30161 7.34835 3.59835C8.05161 2.89509 9.00544 2.5 10 2.5H22.5C23.4946 2.5 24.4484 2.89509 25.1517 3.59835C25.8549 4.30161 26.25 5.25544 26.25 6.25V23.75ZM16.25 15C17.2446 15 18.1984 14.6049 18.9017 13.9017C19.6049 13.1984 20 12.2446 20 11.25C20 10.2554 19.6049 9.30161 18.9017 8.59835C18.1984 7.89509 17.2446 7.5 16.25 7.5C15.2554 7.5 14.3016 7.89509 13.5983 8.59835C12.8951 9.30161 12.5 10.2554 12.5 11.25C12.5 12.2446 12.8951 13.1984 13.5983 13.9017C14.3016 14.6049 15.2554 15 16.25 15V15ZM22.5 22.5C22.5 22.8315 22.3683 23.1495 22.1339 23.3839C21.8995 23.6183 21.5815 23.75 21.25 23.75C20.9185 23.75 20.6005 23.6183 20.3661 23.3839C20.1317 23.1495 20 22.8315 20 22.5C20 21.5054 19.6049 20.5516 18.9017 19.8483C18.1984 19.1451 17.2446 18.75 16.25 18.75C15.2554 18.75 14.3016 19.1451 13.5983 19.8483C12.8951 20.5516 12.5 21.5054 12.5 22.5C12.5 22.8315 12.3683 23.1495 12.1339 23.3839C11.8995 23.6183 11.5815 23.75 11.25 23.75C10.9185 23.75 10.6005 23.6183 10.3661 23.3839C10.1317 23.1495 10 22.8315 10 22.5C10.2637 14.24 22.2387 14.2425 22.5 22.5Z"
                    fill="#374957"
                />
            </G>
            <Defs>
                <ClipPath id="clip0_409_914">
                    <Rect width="30" height="30" fill="white" />
                </ClipPath>
            </Defs>
        </Svg>
    );
}

function PressableIcon(props: PressableIconProps): JSX.Element {
    const { diameter } = props;
    const radius = diameter / 2;
    const pressedOpacity: number = 0.2;
    const unpressedOpacity: number = 0;
    const [opacity, setOpacity] = useState(unpressedOpacity);

    return (
        <Pressable
            onPress={props.onPress}
            onPressIn={() => (props.onPress ? setOpacity(pressedOpacity) : undefined)}
            onPressOut={() => (props.onPress ? setOpacity(unpressedOpacity) : undefined)}>
            {props.children}
            <View
                style={{
                    position: "absolute",
                    top: 0,
                    bottom: 0,
                    left: 0,
                    right: 0,
                    width: diameter,
                    height: diameter,
                    backgroundColor: "grey",
                    borderRadius: radius,
                    opacity: opacity,
                    zIndex: 1,
                }}
            />
        </Pressable>
    );
}

export default function PressablePermissionIcon(props: PressablePermissionIconProps): PermissionIconReturnType {
    const { providerName, diameter } = props;

    switch (providerName) {
        case "phoneIcon":
            return (
                <PressableIcon diameter={diameter} onPress={props.onPress}>
                    <PhoneIcon diameter={diameter} />
                </PressableIcon>
            );
        case "locationIcon":
            return (
                <PressableIcon diameter={diameter} onPress={props.onPress}>
                    <LocationIcon diameter={diameter} />
                </PressableIcon>
            );
        case "cameraIcon":
            return (
                <PressableIcon diameter={diameter} onPress={props.onPress}>
                    <CameraIcon diameter={diameter} />
                </PressableIcon>
            );
        case "addressBookIcon":
            return (
                <PressableIcon diameter={diameter} onPress={props.onPress}>
                    <AddressBookIcon diameter={diameter} />
                </PressableIcon>
            );
        default:
            return <></>;
    }
}
